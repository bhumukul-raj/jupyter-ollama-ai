name: Publish to PyPI

on:
  release:
    types: [created]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 20
        cache: 'yarn'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine jupyter_packaging jupyterlab~=4.0 -U
        yarn install
        
    - name: Lint with ESLint
      run: |
        yarn add eslint@8.55.0 @typescript-eslint/eslint-plugin@6.14.0 @typescript-eslint/parser@6.14.0 --dev --exact
        # List TypeScript files explicitly - allow warnings for CI
        yarn eslint ollama_jupyter_ai/labextension/src/components/*.tsx ollama_jupyter_ai/labextension/src/context/*.tsx ollama_jupyter_ai/labextension/src/hooks/*.ts ollama_jupyter_ai/labextension/src/services/*.ts ollama_jupyter_ai/labextension/src/utils/*.tsx
        
    - name: Build extension
      run: |
        yarn build:prod
        
    - name: Verify extension build
      run: |
        pip install -e . --no-deps
        jupyter labextension list
        # Check for build artifacts instead of the extension itself
        ls -la ollama_jupyter_ai/static/ || echo "Static directory not found"
        
    - name: Build and check package
      run: |
        python -m build
        twine check dist/*
        
    - name: Publish to Test PyPI
      env:
        TWINE_USERNAME: ${{ secrets.TEST_PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.TEST_PYPI_PASSWORD }}
      run: |
        twine upload --verbose --repository testpypi dist/*
        
    - name: Publish to PyPI
      if: startsWith(github.ref, 'refs/tags')
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        twine upload dist/* 